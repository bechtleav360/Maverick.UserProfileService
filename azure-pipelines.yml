trigger:
  - main

variables:
  - name: isRelease
    value: $[eq(variables['Build.SourceBranchName'], 'main')]
  - name: docker.image.userprofile
    value: bechtleav360/user-profile-service
  - name: docker.image.userprofile.saga.worker
    value: bechtleav360/user-profile-saga-worker
  - name: docker.image.userprofile.sync
    value: bechtleav360/user-profile-sync
  - name: docker.image.version
    ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
      value: "latest"
    ${{ else }}:
      value: variables['Build.SourceBranchName']
  - name: docker.publish
    ${{ if eq(variables['Build.SourceBranchName'], 'main')  }}:
      value: true
    ${{ else }}:
      value: false

stages:
  - stage: Publishing
    jobs:
      - job: Testing
        pool: 'A365VSTS'
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '8.x'

          # restore the project
          - task: DotNetCoreCLI@2
            displayName: 'Restore NuGet packages'
            inputs:
              command: 'restore'
              projects: '**/*.csproj'
              verbosityRestore: 'Normal'

          # build the project
          - task: DotNetCoreCLI@2
            displayName: 'Build the application'
            inputs:
              command: 'build'
              projects: '**/*.csproj'
              arguments: '--configuration Release'
 
          # execute unit tests
          - task: VSTest@2
            displayName: 'execute unit tests via VSTest'
            inputs:
              testSelector: 'testAssemblies'
              testAssemblyVer2: '**/bin/**/*.Unit[Tt]est?(s).dll'
              searchFolder: '$(System.DefaultWorkingDirectory)'
              rerunFailedTests: true
              rerunType: basedOnTestFailurePercentage
              rerunFailedThreshold: '33'
         
      - job: Docker
        pool: 'Docker'
        steps:
          - task: Docker@2
            displayName: Login to GitHub
            inputs:
              command: login
              containerRegistry: GitHub
          
          # Building the user profile service and pushing to the ghcr.io
          - task: Docker@2
            displayName: Build UserProfileService Image
            inputs:
              command: build
              Dockerfile: src/UserProfileService/Dockerfile
              repository: $(docker.image.userprofile)
              buildContext: '$(Build.SourcesDirectory)'
              tags: latest
              arguments: --label "org.opencontainers.image.source"="https://github.com/bechtleav360/Maverick.UserProfileService"  
            
          - task: Docker@2
            displayName: Push UserProfileService Image
            inputs:
              command: push
              repository: $(docker.image.userprofile)
              containerRegistry: GitHub
              tags: latest

          # Building the user profile saga worker and pushing to the ghcr.io
          - script: echo "Publishing image with build number $(Build.BuildNumber) and name $(docker.image.userprofile.saga.worker)."
          
          - task: Docker@2
            displayName: Build UserProfileService.Saga.Worker Image
            inputs:
              command: build
              Dockerfile: src/UserProfileService.Saga.Worker/Dockerfile
              repository: $(docker.image.userprofile.saga.worker)
              buildContext: '$(Build.SourcesDirectory)'
              tags: latest
              arguments: --label "org.opencontainers.image.source"="https://github.com/bechtleav360/Maverick.UserProfileService"  
            
          - task: Docker@2
            displayName: Push UserProfileService.Saga.Worker image.
            inputs:
              command: push
              repository: $(docker.image.userprofile.saga.worker)
              containerRegistry: GitHub
              tags: latest

          # Building the user profile sync and pushing to the ghcr.io
          - script: echo "Publishing image with build number $(Build.BuildNumber) and name $(docker.image.userprofile.sync)."
          
          - task: Docker@2
            displayName: Build UserProfileService.Sync Image
            inputs:
              command: build
              Dockerfile: src/UserProfileService.Sync/Dockerfile
              repository: $(docker.image.userprofile.sync)
              buildContext: '$(Build.SourcesDirectory)'
              tags: latest
              arguments: --label "org.opencontainers.image.source"="https://github.com/bechtleav360/Maverick.UserProfileService"  
            
          - task: Docker@2
            displayName: Push UserProfileService.Sync Image
            inputs:
              command: push
              repository: $(docker.image.userprofile.sync)
              containerRegistry: GitHub
              tags: latest     
